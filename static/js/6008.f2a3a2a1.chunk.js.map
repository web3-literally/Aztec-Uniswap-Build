{"version":3,"file":"static/js/6008.f2a3a2a1.chunk.js","mappings":"y1FAMaA,EAAwB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAe,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKA,OAJtDR,EAAG,GAAAS,OAAMC,kCAAkC,iBAAAD,OAAgBV,EAAO,wCAElEE,EAAa,IAAIU,gBAEjBT,EAAYU,YAAW,kBAAMX,EAAWY,OAAO,GAAE,KAAKP,EAAAE,KAAA,EAE5CM,MAAMd,EAAK,CACzBe,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAElB,OACsB,OANlBb,EAACG,EAAAW,KAMPC,cAAchB,GAAUI,EAAAE,KAAA,EACLL,EAAEgB,OAAM,OAAjB,OAAJf,EAAIE,EAAAW,KAAAX,EAAAc,OAAA,SAEHhB,GAAI,yBAAAE,EAAAe,OAAA,GAAAvB,EAAA,KACZ,gBAjBoCwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,KCNzBC,EAAO,SAAPA,GAAO,OAAPA,EAAO,kEAAPA,EAAO,wDAAPA,CAAO,M,6ECuBbC,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,yCAKtBE,EAAOF,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,kCAIjBG,GAAcH,EAAAA,EAAAA,SAAOI,EAAAA,IAAYC,WAAA,CAAAJ,YAAA,gBAAnBD,CAAmB,mEAEjB,SAAAjC,GAAQ,OAAAA,EAALuC,MAAkBC,YAAY,IAE5C,SAAAC,GAAQ,OAAAA,EAALF,MAAkBG,KAAK,IAG/BC,EAAOV,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,iGAGD,SAAAW,GAAQ,OAAAA,EAALL,MAAkBG,KAAK,IAM1CG,EAAWZ,EAAAA,QAAAA,EAAAA,WAAQ,CAAAC,YAAA,gBAARD,CAAQ,6BAErBa,EAAAA,GAGEC,EAAiBd,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,mCAK3Be,EAAcf,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,8BAKxBgB,EAAYhB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,iFAQtBiB,EAAgBjB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,sDAO1BkB,EAA0BlB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAVD,CAAU,4DAMpCmB,EAAenB,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,iBAAXD,CAAW,oEAO1BoB,EAAiBpB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,8GAS3BqB,EAAcrB,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,wFAQxBsB,EAAgBtB,EAAAA,QAAAA,EAAAA,WAAQ,CAAAC,YAAA,iBAARD,CAAQ,6BAG1Ba,EAAAA,GAGEU,GAAcvB,EAAAA,EAAAA,SAAOI,EAAAA,IAAYC,WAAA,CAAAJ,YAAA,iBAAnBD,CAAmB,wEAOjCwB,GAAiBxB,EAAAA,EAAAA,SAAOyB,EAAAA,IAAUpB,WAAA,CAAAJ,YAAA,iBAAjBD,CAAiB,gCAIpCa,EAAAA,GAGEa,EAAQ1B,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,8IAEb,SAAA2B,GAAQ,OAAAA,EAALrB,MAAkBsB,cAAc,IAUxCC,EAAgB7B,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,yBAI1B8B,EAAc9B,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,iBAAXD,CAAW,iFAGpB,SAAA+B,GAAQ,OAAAA,EAALzB,MAAkBG,KAAK,IAO/BuB,EAAyBhC,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,iBAAXD,CAAW,wFAI/B,SAAAiC,GAAQ,OAAAA,EAAL3B,MAAkB4B,WAAW,IAIrCC,EAAanC,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,iBAAXD,CAAW,gEAInB,SAAAoC,GAAQ,OAAAA,EAAL9B,MAAkBG,KAAK,IAG/B4B,EAAoBrC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,qEAO/BsC,EAAa,SAAbA,GAAa,OAAbA,EAAAA,EAAa,+CAAbA,EAAAA,EAAa,6CAAbA,EAAAA,EAAa,sCAAbA,CAAa,EAAbA,GAAa,IA8JlB,EAxJqB,WACnB,IAAAC,GAA8BC,EAAAA,EAAAA,gBAAtBC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SACjBC,GAA0BC,EAAAA,EAAAA,YAAmBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,GAASD,EAAA,GAAEE,GAAYF,EAAA,GAC9BG,IAAwBT,EAAAA,EAAAA,UAAS,IAAGU,IAAAR,EAAAA,EAAAA,GAAAO,GAAA,GAA7BE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,IAA0Bb,EAAAA,EAAAA,WAAS,GAAMc,IAAAZ,EAAAA,EAAAA,GAAAW,GAAA,GAAlCE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GAChBG,IAAsBC,EAAAA,EAAAA,IAAuB,SAACC,GAAK,OAAKA,EAAMF,mBAAmB,IACvFG,IAAwCpB,EAAAA,EAAAA,WAAS,GAAMqB,IAAAnB,EAAAA,EAAAA,GAAAkB,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAsCxB,EAAAA,EAAAA,UAAS,GAAEyB,IAAAvB,EAAAA,EAAAA,GAAAsB,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAC5BG,IAASC,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,2BACxBC,IAAoBC,EAAAA,EAAAA,IAAeF,EAAAA,GAAAA,2BACnCG,IAAWC,EAAAA,EAAAA,IAAYC,EAAAA,kCAAmCC,GAE1DC,GAAe,WACnBd,IAAgB,GAChBP,IAAS,GACT3E,YAAW,WACT2E,IAAS,EACX,GAAG,IACL,GAEAsB,EAAAA,EAAAA,YAAU,WACJzC,GAAWC,GAAYmC,KACxB7G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAgH,EAAA1G,EAAA2G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvH,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEyBf,EAAyB2E,GAAQ,OACoC,GADpC0C,EAAAxG,EAAAW,KAAhDb,EAAI0G,EAAJ1G,KACFsE,EAAQtE,EAAKgH,MAAK,SAAC1C,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO2C,cAAe5F,EAAQ6F,0BAA0B,IAEtF5C,EAAM,CAADpE,EAAAE,KAAA,eAAAF,EAAAc,OAAA,wBAAAd,EAAAE,KAAA,GAEgBgG,GAASe,QAAQlD,GAAUmD,UAAU1C,UAAe,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAO+C,OAAM,QAAAT,EAAA1G,EAAAW,KAAAgG,GAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GAA/ElC,EAASmC,EAAA,GAEZvC,IAAuB,IAAdI,IACLqC,EAAYO,EAAAA,GAAAA,KAAehD,EAAMiD,QAAQC,IAAGC,KAAAC,IAAC,GAAM,IACzDnD,EAASD,GACTwB,GAAeiB,EAAUY,YACzBvC,IAAoB,IACrBlF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0H,GAAA1H,EAAA,SAEDsG,KAAc,yBAAAtG,EAAAe,OAAA,GAAAvB,EAAA,kBAhBjBH,EAoBL,GAAG,CAACyE,EAASoC,GAAUnC,EAAUmB,KAEjC,IAAMyC,GAAS,eAAAC,GAAAvI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsI,IAAA,IAAAC,EAAA,OAAAxI,EAAAA,EAAAA,KAAAS,MAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,UAAA6H,EAAA9H,KAAA,IAEViG,IAAY9B,GAASA,EAAMiD,QAAUjD,EAAM4D,aAAejE,GAAQ,CAAAgE,EAAA7H,KAAA,SAC/C,OAArBsF,IAAgB,GAAKuC,EAAA7H,KAAA,EAEuBgG,GACzCe,QAAgB,OAARlD,QAAQ,IAARA,OAAQ,EAARA,EAAUkE,aAClBf,UAAU9C,MAAMA,EAAM+C,MAAOrD,EAAc,OAALM,QAAK,IAALA,OAAK,EAALA,EAAOiD,OAAa,OAALjD,QAAK,IAALA,OAAK,EAALA,EAAO4D,aAAY,OAFxC,OAA7BF,EAA6BC,EAAApH,KAAAoH,EAAA7H,KAAA,EAI7B4H,EAASI,OAAM,OAErBrD,GAAQiD,EAASlD,MACjBY,IAAgB,GAChBf,IAAa,GACbS,IAAoB,GAAM,QAAA6C,EAAA7H,KAAA,iBAAA6H,EAAA9H,KAAA,GAAA8H,EAAAL,GAAAK,EAAA,SAG5BvC,IAAgB,GAChBc,KAAc,yBAAAyB,EAAAhH,OAAA,GAAA8G,EAAA,mBAEjB,kBApBc,OAAAD,EAAA3G,MAAA,KAAAC,UAAA,KAsBf,OACEiH,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,YAAU,EAAC1C,OAAQA,GAAQ2C,UAAWxC,GAAmByC,UAAW,GAAIC,SAAU,IAAIL,UAC3FF,EAAAA,EAAAA,KAAC/G,EAAS,CAAAiH,SACP7D,IACCmE,EAAAA,EAAAA,MAAClG,EAAc,CAAA4F,SAAA,EACbF,EAAAA,EAAAA,KAACS,EAAAA,GAAAA,cAAwB,CAAAP,SAAC,sBAC1BM,EAAAA,EAAAA,MAACjG,EAAW,CAAA2F,SAAA,CAAC,iCACoB1C,GAAY,iDAE7CwC,EAAAA,EAAAA,KAACxF,EAAa,CAACkG,KAAI,2BAAA1I,OAA6ByE,IAAQkE,OAAO,SAAQT,UACrEF,EAAAA,EAAAA,KAACS,EAAAA,GAAAA,KAAe,CAAAP,UACdM,EAAAA,EAAAA,MAACjF,EAAiB,CAAA2E,SAAA,EAChBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eACNF,EAAAA,EAAAA,KAACY,EAAAA,GAAgB,YAKvBZ,EAAAA,EAAAA,KAACvF,EAAW,CAACoG,KAAMC,EAAAA,GAAAA,OAAmBC,SAAUC,EAAAA,GAAAA,OAAuBC,QAASpD,GAAkBqC,SAAC,cAKrGM,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACEM,EAAAA,EAAAA,MAACxG,EAAc,CAAAkG,SAAA,EACbM,EAAAA,EAAAA,MAACrG,EAAa,CAAA+F,SAAA,EACZF,EAAAA,EAAAA,KAACtF,EAAc,CAACuG,QAASpD,GAAmBqD,OAAO,WACnDlB,EAAAA,EAAAA,KAAC3E,EAAU,CAAA6E,SAAC,yBACZM,EAAAA,EAAAA,MAACtG,EAAS,CAAAgG,SAAA,CAAE1C,GAAY,YACxBwC,EAAAA,EAAAA,KAACpG,EAAI,KACL4G,EAAAA,EAAAA,MAACpG,EAAuB,CAAA8F,SAAA,EACtBF,EAAAA,EAAAA,KAAChF,EAAW,CAAAkF,SAAC,oBAA8B,KAC3CF,EAAAA,EAAAA,KAAC3F,EAAY,CAAA6F,SACV1C,KAAgBhC,EAAc2F,qBAAuB3D,KAAgBhC,EAAc4F,eAAc,GAAApJ,OAC3FwD,EAAc2F,oBAAmB,SACpC,UAGRX,EAAAA,EAAAA,MAACpG,EAAuB,CAAA8F,SAAA,EACtBF,EAAAA,EAAAA,KAAChF,EAAW,CAAAkF,SAAC,6BAAuC,KACpDF,EAAAA,EAAAA,KAAC3F,EAAY,CAAA6F,SACV1C,KAAgBhC,EAAc2F,oBAAmB,GAAAnJ,OAC3CwD,EAAc6F,mBAAkB,SACnC,aAIVrB,EAAAA,EAAAA,KAAC/F,EAAW,CAACqH,IAAKC,QAEpBf,EAAAA,EAAAA,MAACpH,EAAI,CAAA8G,SAAA,EACHM,EAAAA,EAAAA,MAACtF,EAAsB,CAAAgF,SAAA,CAAC,+DACkC1C,GAAY,oBAEtEwC,EAAAA,EAAAA,KAACjF,EAAa,CAAAmF,UACZF,EAAAA,EAAAA,KAAClG,EAAQ,CAAC4G,KAAK,+DAA+DC,OAAO,SAAQT,UAC3FF,EAAAA,EAAAA,KAACS,EAAAA,GAAAA,KAAe,CAAAP,SAAC,qCAIpBrD,KACC2D,EAAAA,EAAAA,MAAC5F,EAAK,CAAAsF,SAAA,EACJF,EAAAA,EAAAA,KAACwB,EAAAA,EAAa,IAAG,gDAKrBhB,EAAAA,EAAAA,MAACnH,EAAW,CACV4H,QAASzB,GACTqB,KAAMC,EAAAA,GAAAA,OACNC,SAAUC,EAAAA,GAAAA,OACVS,SAAUrE,GAAa8C,SAAA,CAEtB9C,KAAgB4C,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAACR,OAAO,WAChCV,EAAAA,EAAAA,MAAA,QAAAN,SAAA,CAAM,QAAM9C,IAAgB,MAAM,yBASpD,C","sources":["nft/queries/genie/GetAirdorpMerkle.ts","nft/types/airdrop/index.ts","components/AirdropModal/index.tsx"],"sourcesContent":["import { Rewards } from 'nft/types/airdrop'\n\ninterface CollectionrRewardsResponse {\n  data: Array<Rewards>\n}\n\nexport const CollectionRewardsFetcher = async (address: string): Promise<CollectionrRewardsResponse> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/rewards/${address}?category=GENIE_UNISWAP_USDC_AIRDROP`\n\n  const controller = new AbortController()\n\n  const timeoutId = setTimeout(() => controller.abort(), 3000)\n\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  clearInterval(timeoutId)\n  const data = await r.json()\n\n  return data\n}\n","export enum Airdrop {\n  LOOKS_RARE_NFT_COMMERCE_REWARDS = 'LOOKS_RARE_NFT_COMMERCE_REWARDS',\n  GENIE_UNISWAP_USDC_AIRDROP = 'GENIE_UNISWAP_USDC_AIRDROP',\n}\n\nexport interface Rewards {\n  amount: string\n  walletAddress: string\n  tokenAddress: string\n  merkleProof: Array<string>\n  rewardType: Airdrop\n  chainId: number\n  index: number\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport uniswapNftAirdropClaim from 'abis/uniswap-nft-airdrop-claim.json'\nimport airdropBackgroundv2 from 'assets/images/airdopBackground.png'\nimport { ButtonEmphasis, ButtonSize, ThemeButton } from 'components/Button'\nimport { OpacityHoverState } from 'components/Common'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useContract } from 'hooks/useContract'\nimport { ChevronRightIcon } from 'nft/components/icons'\nimport { useIsNftClaimAvailable } from 'nft/hooks/useIsNftClaimAvailable'\nimport { CollectionRewardsFetcher } from 'nft/queries/genie/GetAirdorpMerkle'\nimport { Airdrop, Rewards } from 'nft/types/airdrop'\nimport { useEffect, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled from 'styled-components/macro'\nimport { CloseIcon, ThemedText } from 'theme'\n\nimport Modal from '../Modal'\n\nconst ModalWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Body = styled.div`\n  padding: 28px 20px 20px 20px;\n`\n\nconst ClaimButton = styled(ThemeButton)`\n  width: 100%;\n  background-color: ${({ theme }) => theme.accentAction};\n  border-radius: 12px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst Line = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.white};\n  opacity: 0.24;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`\n\nconst LinkWrap = styled.a`\n  text-decoration: none;\n  ${OpacityHoverState}\n`\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 170px;\n`\n\nconst USDCLabel = styled.div`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 44px;\n  margin-top: 8px;\n  color: white;\n`\n\nconst TextContainer = styled.div`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  right: 16px;\n`\n\nconst RewardsDetailsContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`\n\nconst CurrencyText = styled.span`\n  color: white;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14.5px;\n`\n\nconst ClaimContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 380px;\n  padding: 60px 28px;\n  padding-bottom: 20px;\n`\n\nconst SuccessText = styled.div`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n`\n\nconst EtherscanLink = styled.a`\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst CloseButton = styled(ThemeButton)`\n  max-width: 68px;\n  margin-top: auto;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst SyledCloseIcon = styled(CloseIcon)`\n  float: right;\n  height: 24px;\n\n  ${OpacityHoverState}\n`\n\nconst Error = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.accentCritical};\n  font-weight: 500;\n  line-height: 24px;\n  border-radius: 16px;\n  padding: 12px 20px;\n  font-size: 14px;\n  align-items: center;\n  gap: 12px;\n`\n\nconst ReactLinkWrap = styled.div`\n  margin-bottom: 40px;\n`\n\nconst RewardsText = styled.span`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.white};\n\n  &:first-child {\n    margin-bottom: 8px;\n  }\n`\n\nconst RewardsInformationText = styled.span`\n  display: inline-block;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  margin-bottom: 28px;\n`\n\nconst MainHeader = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst EtherscanLinkWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`\n\nenum RewardAmounts {\n  tradingRewardAmount = 300,\n  holderRewardAmount = 1000,\n  combinedAmount = 1300,\n}\n\nconst AirdropModal = () => {\n  const { account, provider } = useWeb3React()\n  const [claim, setClaim] = useState<Rewards>()\n  const [isClaimed, setIsClaimed] = useState(false)\n  const [hash, setHash] = useState('')\n  const [error, setError] = useState(false)\n  const setIsClaimAvailable = useIsNftClaimAvailable((state) => state.setIsClaimAvailable)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [totalAmount, setTotalAmount] = useState(0)\n  const isOpen = useModalIsOpen(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const usdcAirdropToggle = useToggleModal(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const contract = useContract(UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS, uniswapNftAirdropClaim)\n\n  const displayError = () => {\n    setIsSubmitting(false)\n    setError(true)\n    setTimeout(() => {\n      setError(false)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    if (account && provider && contract) {\n      ;(async () => {\n        try {\n          const { data } = await CollectionRewardsFetcher(account)\n          const claim = data.find((claim) => claim?.rewardType === Airdrop.GENIE_UNISWAP_USDC_AIRDROP)\n\n          if (!claim) return\n\n          const [isClaimed] = await contract.connect(provider).functions.isClaimed(claim?.index)\n\n          if (claim && isClaimed === false) {\n            const usdAmount = BigNumber.from(claim.amount).div(10 ** 6)\n            setClaim(claim)\n            setTotalAmount(usdAmount.toNumber())\n            setIsClaimAvailable(true)\n          }\n        } catch (err) {\n          displayError()\n        }\n      })()\n    }\n  }, [account, contract, provider, setIsClaimAvailable])\n\n  const makeClaim = async () => {\n    try {\n      if (contract && claim && claim.amount && claim.merkleProof && provider) {\n        setIsSubmitting(true)\n\n        const response: TransactionResponse = await contract\n          .connect(provider?.getSigner())\n          .functions.claim(claim.index, account, claim?.amount, claim?.merkleProof)\n\n        await response.wait()\n\n        setHash(response.hash)\n        setIsSubmitting(false)\n        setIsClaimed(true)\n        setIsClaimAvailable(false)\n      }\n    } catch (err) {\n      setIsSubmitting(false)\n      displayError()\n    }\n  }\n\n  return (\n    <>\n      <Modal hideBorder isOpen={isOpen} onDismiss={usdcAirdropToggle} maxHeight={90} maxWidth={400}>\n        <ModalWrap>\n          {isClaimed ? (\n            <ClaimContainer>\n              <ThemedText.HeadlineSmall>Congratulations!</ThemedText.HeadlineSmall>\n              <SuccessText>\n                You have successfully claimed {totalAmount} USDC. Thank you for supporting Genie.xyz.\n              </SuccessText>\n              <EtherscanLink href={`https://etherscan.io/tx/${hash}`} target=\"_blank\">\n                <ThemedText.Link>\n                  <EtherscanLinkWrap>\n                    <span>Etherscan</span>\n                    <ChevronRightIcon />\n                  </EtherscanLinkWrap>\n                </ThemedText.Link>\n              </EtherscanLink>\n\n              <CloseButton size={ButtonSize.medium} emphasis={ButtonEmphasis.medium} onClick={usdcAirdropToggle}>\n                Close\n              </CloseButton>\n            </ClaimContainer>\n          ) : (\n            <>\n              <ImageContainer>\n                <TextContainer>\n                  <SyledCloseIcon onClick={usdcAirdropToggle} stroke=\"white\" />\n                  <MainHeader>Uniswap NFT Airdrop</MainHeader>\n                  <USDCLabel>{totalAmount} USDC</USDCLabel>\n                  <Line />\n                  <RewardsDetailsContainer>\n                    <RewardsText>Trading rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount === RewardAmounts.tradingRewardAmount || totalAmount === RewardAmounts.combinedAmount\n                        ? `${RewardAmounts.tradingRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                  <RewardsDetailsContainer>\n                    <RewardsText>Genie NFT holder rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount !== RewardAmounts.tradingRewardAmount\n                        ? `${RewardAmounts.holderRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                </TextContainer>\n                <StyledImage src={airdropBackgroundv2} />\n              </ImageContainer>\n              <Body>\n                <RewardsInformationText>\n                  As a long time supporter of Genie, you’ve been awarded {totalAmount} USDC tokens.\n                </RewardsInformationText>\n                <ReactLinkWrap>\n                  <LinkWrap href=\"https://uniswap.org/blog/uniswap-nft-aggregator-announcement\" target=\"_blank\">\n                    <ThemedText.Link>Read more about Uniswap NFT.</ThemedText.Link>\n                  </LinkWrap>\n                </ReactLinkWrap>\n\n                {error && (\n                  <Error>\n                    <AlertTriangle />\n                    Claim USDC failed. Please try again later\n                  </Error>\n                )}\n\n                <ClaimButton\n                  onClick={makeClaim}\n                  size={ButtonSize.medium}\n                  emphasis={ButtonEmphasis.medium}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting && <Loader stroke=\"white\" />}\n                  <span>Claim{isSubmitting && 'ing'} USDC</span>\n                </ClaimButton>\n              </Body>\n            </>\n          )}\n        </ModalWrap>\n      </Modal>\n    </>\n  )\n}\n\nexport default AirdropModal\n"],"names":["CollectionRewardsFetcher","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","address","url","controller","timeoutId","r","data","wrap","_context","prev","next","concat","process","AbortController","setTimeout","abort","fetch","method","headers","sent","clearInterval","json","abrupt","stop","_x","apply","arguments","Airdrop","ModalWrap","styled","componentId","Body","ClaimButton","ThemeButton","withConfig","theme","accentAction","_ref2","white","Line","_ref3","LinkWrap","OpacityHoverState","ImageContainer","StyledImage","USDCLabel","TextContainer","RewardsDetailsContainer","CurrencyText","ClaimContainer","SuccessText","EtherscanLink","CloseButton","SyledCloseIcon","CloseIcon","Error","_ref4","accentCritical","ReactLinkWrap","RewardsText","_ref5","RewardsInformationText","_ref6","textPrimary","MainHeader","_ref7","EtherscanLinkWrap","RewardAmounts","_useWeb3React","useWeb3React","account","provider","_useState","useState","_useState2","_slicedToArray","claim","setClaim","_useState3","_useState4","isClaimed","setIsClaimed","_useState5","_useState6","hash","setHash","_useState7","_useState8","error","setError","setIsClaimAvailable","useIsNftClaimAvailable","state","_useState9","_useState10","isSubmitting","setIsSubmitting","_useState11","_useState12","totalAmount","setTotalAmount","isOpen","useModalIsOpen","ApplicationModal","usdcAirdropToggle","useToggleModal","contract","useContract","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","uniswapNftAirdropClaim","displayError","useEffect","_yield$CollectionRewa","_claim","_yield$contract$conne","_yield$contract$conne2","_isClaimed","usdAmount","find","rewardType","GENIE_UNISWAP_USDC_AIRDROP","connect","functions","index","BigNumber","amount","div","Math","pow","toNumber","t0","makeClaim","_ref9","_callee2","response","_context2","merkleProof","getSigner","wait","_jsx","_Fragment","children","Modal","hideBorder","onDismiss","maxHeight","maxWidth","_jsxs","ThemedText","href","target","ChevronRightIcon","size","ButtonSize","emphasis","ButtonEmphasis","onClick","stroke","tradingRewardAmount","combinedAmount","holderRewardAmount","src","airdropBackgroundv2","AlertTriangle","disabled","Loader"],"sourceRoot":""}